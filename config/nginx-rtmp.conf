# Configuración de Nginx con módulo RTMP para streaming
# Archivo: /usr/local/nginx/conf/nginx.conf

user www-data;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
}

# Configuración RTMP
rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        
        # Aplicación principal para live streaming
        application live {
            live on;
            record off;
            
            # Habilitar HLS
            hls on;
            hls_path /var/www/streaming/hls;
            hls_fragment 4s;
            hls_playlist_length 20s;
            
            # Transcodificación adaptativa (múltiples calidades)
            # Esto requiere FFmpeg compilado con las opciones necesarias
            exec ffmpeg -i rtmp://localhost:1935/live/$name
                # 1080p
                -c:v libx264 -preset veryfast -b:v 5000k -maxrate 5350k -bufsize 10000k
                -s 1920x1080 -r 30 -g 60 -keyint_min 60 -sc_threshold 0
                -c:a aac -b:a 192k -ar 48000
                -f flv rtmp://localhost:1935/hls/$name_1080p
                # 720p
                -c:v libx264 -preset veryfast -b:v 3000k -maxrate 3200k -bufsize 6000k
                -s 1280x720 -r 30 -g 60 -keyint_min 60 -sc_threshold 0
                -c:a aac -b:a 128k -ar 48000
                -f flv rtmp://localhost:1935/hls/$name_720p
                # 480p
                -c:v libx264 -preset veryfast -b:v 1500k -maxrate 1600k -bufsize 3000k
                -s 854x480 -r 30 -g 60 -keyint_min 60 -sc_threshold 0
                -c:a aac -b:a 128k -ar 48000
                -f flv rtmp://localhost:1935/hls/$name_480p
                # 360p
                -c:v libx264 -preset veryfast -b:v 800k -maxrate 850k -bufsize 1600k
                -s 640x360 -r 30 -g 60 -keyint_min 60 -sc_threshold 0
                -c:a aac -b:a 96k -ar 48000
                -f flv rtmp://localhost:1935/hls/$name_360p;
            
            # Webhook para notificar cuando inicia/termina stream
            on_publish http://localhost/api/webhooks/stream-start.php;
            on_publish_done http://localhost/api/webhooks/stream-end.php;
            
            # Validar stream key antes de permitir publicación
            on_publish http://localhost/api/webhooks/validate-stream.php;
            
            # Denegar pull (solo permitir push)
            deny play all;
            
            # Permitir publicación solo desde IPs específicas (opcional)
            # allow publish 192.168.1.0/24;
            # deny publish all;
        }
        
        # Aplicación para HLS (salida transcodificada)
        application hls {
            live on;
            hls on;
            hls_path /var/www/streaming/hls;
            hls_fragment 4s;
            hls_playlist_length 20s;
            hls_nested on;
            hls_variant _1080p BANDWIDTH=5000000,RESOLUTION=1920x1080;
            hls_variant _720p BANDWIDTH=3000000,RESOLUTION=1280x720;
            hls_variant _480p BANDWIDTH=1500000,RESOLUTION=854x480;
            hls_variant _360p BANDWIDTH=800000,RESOLUTION=640x360;
            
            # Habilitar grabación (VOD)
            record all;
            record_path /var/www/streaming/vod;
            record_suffix -%Y%m%d-%H%M%S.flv;
            record_unique on;
            record_max_size 2048M;
        }
    }
}

# Configuración HTTP
http {
    include mime.types;
    default_type application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml font/truetype font/opentype 
               application/vnd.ms-fontobject image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=100r/s;
    
    # SSL/TLS (configurar después de obtener certificado)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # Servidor principal
    server {
        listen 80;
        listen [::]:80;
        server_name tu-dominio.com www.tu-dominio.com;
        
        root /var/www/streaming-platform/public;
        index index.php index.html;
        
        # PHP-FPM
        location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }
        
        # API endpoints con rate limiting
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            try_files $uri $uri/ =404;
        }
        
        # HLS streams
        location /hls/ {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            
            alias /var/www/streaming/hls/;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            
            # Protección contra hotlinking
            valid_referers none blocked server_names tu-dominio.com *.tu-dominio.com;
            if ($invalid_referer) {
                return 403;
            }
            
            # Validar token de acceso (implementar en PHP)
            auth_request /api/validate-stream-access.php;
        }
        
        # VOD (grabaciones)
        location /vod/ {
            alias /var/www/streaming/vod/;
            add_header Cache-Control "public, max-age=31536000";
            add_header Access-Control-Allow-Origin * always;
            
            # Validar acceso
            auth_request /api/validate-vod-access.php;
        }
        
        # Estadísticas RTMP (opcional)
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            
            # Proteger con autenticación básica
            auth_basic "RTMP Stats";
            auth_basic_user_file /etc/nginx/.htpasswd;
        }
        
        location /stat.xsl {
            root /usr/local/nginx/html;
        }
        
        # Assets estáticos
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Denegar acceso a archivos ocultos
        location ~ /\. {
            deny all;
        }
    }
    
    # Redireccion HTTP a HTTPS (después de configurar SSL)
    # server {
    #     listen 80;
    #     listen [::]:80;
    #     server_name tu-dominio.com www.tu-dominio.com;
    #     return 301 https://$server_name$request_uri;
    # }
    
    # Servidor HTTPS (después de obtener certificado Let's Encrypt)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name tu-dominio.com www.tu-dominio.com;
    #     
    #     ssl_certificate /etc/letsencrypt/live/tu-dominio.com/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/tu-dominio.com/privkey.pem;
    #     
    #     # ... resto de configuración igual que HTTP ...
    # }
}
